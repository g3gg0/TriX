	Elf32_Sym *(*get_symbol) ( t_workspace * ws, int symbol_id);
	char *(*get_section_name) ( t_workspace * ws, int section);
	char *(*get_string) ( t_workspace * ws, int string);
	char *(*get_symbol_name) ( t_workspace * ws, int symbol_id);
	object *(*create_object) ( t_workspace * ws);
	t_segment *(*get_reloc) ( t_workspace * ws, int num);
	t_segment *(*get_section) ( t_workspace * ws, int section);
	t_segment *(*get_strtab) ( t_workspace * ws, int num);
	t_segment *(*get_symtab) ( t_workspace * ws, int num);
	t_segment *(*get_tab) ( t_workspace * ws, int type, int num);
	unsigned int (*byteswap_rel) ( t_priv * source, Elf32_Rel * header);
	unsigned int (*byteswap_sym) ( t_priv * source, Elf32_Sym * header);
	unsigned int (*dump_object) ( t_workspace * ws);
	unsigned int (*dump_relocs) ( t_workspace * ws);
	unsigned int (*dump_symtabs) ( t_workspace * ws);
	unsigned int (*fmt_elf_cify) ( char *name);
	unsigned int (*free_object) ( t_elf_object * obj);
	unsigned int (*parse_reloc) ( t_workspace * ws, t_elf_object * obj, t_segment * rel);
	unsigned int (*parse_symtab) ( t_workspace * ws, t_elf_object * obj, t_segment * tab);
	unsigned int (*section_used) ( t_workspace * ws, t_elf_object * obj, t_segment * seg);
